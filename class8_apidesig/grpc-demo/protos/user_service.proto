syntax = "proto3";

package user;

// User service definition
service UserService {
  // Unary RPC: Simple request-response
  rpc GetUser (GetUserRequest) returns (UserResponse) {}

  // Unary RPC: Create a new user
  rpc CreateUser (CreateUserRequest) returns (UserResponse) {}

  // Server streaming RPC: Get multiple users
  rpc ListUsers (ListUsersRequest) returns (stream UserResponse) {}

  // Client streaming RPC: Batch create users
  rpc BatchCreateUsers (stream CreateUserRequest) returns (BatchCreateResponse) {}

  // Bidirectional streaming RPC: Chat-like feature
  rpc StreamUsers (stream UserMessage) returns (stream UserMessage) {}
}

// Message definitions
message GetUserRequest {
  int32 user_id = 1;
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  int32 age = 3;
}

message UserResponse {
  int32 user_id = 1;
  string name = 2;
  string email = 3;
  int32 age = 4;
  string created_at = 5;
}

message ListUsersRequest {
  int32 limit = 1;
}

message BatchCreateResponse {
  int32 users_created = 1;
  repeated int32 user_ids = 2;
}

message UserMessage {
  int32 user_id = 1;
  string message = 2;
  string timestamp = 3;
}
